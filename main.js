(()=>{"use strict";class e{constructor(e,t,s,r,i,n){this._name=e.name,this._link=e.link,this._card=t,this._handleImageClick=s,this._handleCardDelete=r,this._handleLikeCard=i,this._data=e,this.id=e._id,this.isLiked=e.isLiked,this._handleDeleteModal=n}_setEventListeners(){this._likeButton=this.cardElement.querySelector(".card__like-button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeCard(this)})),this.cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteModal(this)})),this._imageElement.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}handleDeleteCard=()=>{this._handleCardDelete(this,this.cardElement)};addLikeButton(){this._likeButton.classList.add("card__like-button_active")}removeLikeButton(){this._likeButton.classList.remove("card__like-button_active")}setLikeButtonState(){this.isLiked&&this.addLikeButton()}renderCard(){return this.cardElement=document.querySelector(this._card).content.querySelector(".card").cloneNode(!0),this.cardElement.querySelector(".card__title").textContent=this._name,this._imageElement=this.cardElement.querySelector(".card__image"),this._imageElement.setAttribute("src",this._link),this._imageElement.setAttribute("alt","Picture of "+this._name),this._setEventListeners(),this.setLikeButtonState(),this.cardElement}}class t{constructor(e,t){this._settings=e,this._form=document.querySelector(t),this._inputList=[...this._form.querySelectorAll(e.inputSelector)],this._buttonElement=this._form.querySelector(e.submitButtonSelector)}_checkInputvalidity(e){e.validity.valid?this._removeInputError(e):this._addInputError(e)}_removeInputError(e){this._errorElement=this._form.querySelector(`.${e.id}-error`),e.classList.remove(this._settings.inputErrorClass),this._errorElement.classList.remove(this._settings.errorClass),this._errorElement.textContent=""}_addInputError(e){this._errorElement=this._form.querySelector(`.${e.id}-error`),this._errorMessage=e.validationMessage,e.classList.add(this._settings.inputErrorClass),this._errorElement.textContent=this._errorMessage,this._errorElement.classList.add(this._settings.errorClass)}toggleButtonState(){this._hasValidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.disabled=!1)}_hasValidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputvalidity(e),this.toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._removeInputError(e)})),this.toggleButtonState()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._closeButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.preventDefault,e.target===this._popupElement&&this.close()}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputValues=[...this._popupForm.querySelectorAll(".modal__input")],this._popupBtn=this._popupElement.querySelector(".modal__button"),this._popupBtnText=this._popupBtn.textContent}_getInputValue(){return this._inputData={},this._inputValues.forEach((e=>{this._inputData[e.name]=e.value})),this._inputData}setInputValues(e){this._inputValues.forEach((t=>{t.value=e[t.name]}))}reset(){this._popupForm.reset()}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupBtn.textContent=e?t:this._popupBtnText}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValue())}))}}const i=document.querySelector("#profile-edit-button"),n=document.querySelector("#profile-add-button"),o=document.querySelector("#avatar-edit-button"),a={};var d;function l(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.renderLoading(!0,s),e().then((()=>{t.close()})).catch(console.error).finally((()=>{t.renderLoading(!1,s)}))}function h(t){return new e(t,"#card-template",c,u,m,_).renderCard()}function c(e,t){L.open({name:e,link:t})}function u(e){f.deleteCard(e.id).then((()=>{e.cardElement.remove(),e.cardElement=null,k.close()})).catch(console.error)}function _(e){k.open(e)}function m(e){return!1===e.isLiked?f.addLike(e.id).then((()=>{e.isLiked=!0,e.addLikeButton()})).catch(console.error):!0===e.isLiked?f.removeLike(e.id).then((()=>{e.isLiked=!1,e.removeLikeButton()})).catch(console.error):void 0}d={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},[...document.querySelectorAll(d.formSelector)].forEach((e=>{const s=new t(d,`#${e.id}`),r=e.getAttribute("name");a[r]=s,s.enableValidation()})),document.getElementById("logo").src="4e8e0a1d604782a0dff8.svg";const p=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){this._container.prepend(e)}setItems(e){this._items=e}}({items:[],renderer:h},".cards__list"),E=new r("#profile-edit-modal",(function(e){l((function(){return f.editProfile({name:e.name,description:e.description}).then((e=>{g.setUserInfo({name:e.name,description:e.about,avatar:e.avatar})}))}),E)})),v=new r("#profile-add-modal",(function(e){l((function(){return f.addCard({name:e.name,link:e.image}).then((e=>{p.addItem(h(e)),v.reset(),a.addCardPopupForm.toggleButtonState()}))}),v)})),L=new class extends s{constructor(e){super(e),this._imagePreview=this._popupElement.querySelector(".modal__image"),this._imageCaption=this._popupElement.querySelector(".modal__caption")}open(e){let{name:t,link:s}=e;this._imagePreview.src=s,this._imagePreview.alt=`Picture of ${t}`,this._imageCaption.textContent=t,super.open()}}("#modal-image-popup"),g=new class{constructor(e,t,s){this._profileName=document.querySelector(e),this._description=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._profileName.innerText,description:this._description.innerText}}setUserInfo(e){this._profileName.textContent=e.name,this._description.textContent=e.description,this.setAvatar(e.avatar)}setAvatar(e){this._avatar.src=e}}("#profile-title","#profile-description","#profile-image"),f=new class{constructor(e){this._authorization=e.headers.authorization,this._baseUrl=e.baseUrl,this._headers=e.headers}_request(e,t){return fetch(e,t).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}getUser(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}editProfile(e){return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.description})})}addCard(e){return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}addLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}removeLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}async updateAvatar(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7c40b814-e707-41cf-959d-91dbc11467c7","Content-Type":"application/json"}}),k=new class extends s{constructor(e,t){super(e),this._popup=document.querySelector(e),this._confirmBtn=this._popup.querySelector(".modal__button"),this._handleFormSubmit=t}open(e){this.card=e,super.open()}setEventListeners(){super.setEventListeners(),this._confirmBtn.addEventListener("click",(e=>{this._handleFormSubmit(this.card)}))}}("#delete-card-modal",u),b=new r("#avatar-edit-modal",(function(e){l((function(){return f.updateAvatar(e.image).then((()=>{g.setAvatar(e.image),b.reset(),a.avatarPopupForm.toggleButtonState()}))}),b)}));i.addEventListener("click",(()=>{const{name:e,description:t}=g.getUserInfo();E.setInputValues({name:e,description:t}),a.profilePopupForm.resetValidation(),E.open()})),n.addEventListener("click",(()=>{v.open()})),o.addEventListener("click",(()=>{b.open()})),v.setEventListeners(),E.setEventListeners(),L.setEventListeners(),k.setEventListeners(),b.setEventListeners(),f.getUser().then((e=>{g.setUserInfo({name:e.name,description:e.about,avatar:e.avatar})})).catch(console.error),f.getInitialCards().then((e=>{p.setItems(e),p.renderItems()})).catch(console.error)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,