(()=>{"use strict";var e="";class t{constructor(e,t,i,s,r,n){this._name=e.name,this._link=e.link,this._card=t,this._handleImageClick=i,this._handleCardDelete=s,this._handleLikeCard=r,this._data=e,this._id=e._id,this._isLiked=e.isLiked,this._handleDeleteModal=n}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeCard(this)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteModal(this)})),this._imageElement.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}handleDeleteCard=()=>{this._handleCardDelete(this,this._cardElement)};addLikeButton(){this._likeButton.classList.add("card__like-button_active")}removeLikeButton(){this._likeButton.classList.remove("card__like-button_active")}setLikeButtonState(){this._isLiked&&this.addLikeButton()}renderCard(){return this._cardElement=document.querySelector(this._card).content.querySelector(".card").cloneNode(!0),this._cardElement.querySelector(".card__title").textContent=this._name,this._imageElement=this._cardElement.querySelector(".card__image"),this._imageElement.setAttribute("src",this._link),this._imageElement.setAttribute("alt","Picture of "+this._name),this._setEventListeners(),this.setLikeButtonState(),this._cardElement}}class i{constructor(e,t){this._settings=e,this._form=document.querySelector(t),this._inputList=[...this._form.querySelectorAll(e.inputSelector)],this._buttonElement=this._form.querySelector(e.submitButtonSelector)}_checkInputvalidity(e){e.validity.valid?this._removeInputError(e):this._addInputError(e)}_removeInputError(e){this._errorElement=this._form.querySelector(`.${e.id}-error`),e.classList.remove(this._settings.inputErrorClass),this._errorElement.classList.remove(this._settings.errorClass),this._errorElement.textContent=""}_addInputError(e){this._errorElement=this._form.querySelector(`.${e.id}-error`),this._errorMessage=e.validationMessage,e.classList.add(this._settings.inputErrorClass),this._errorElement.textContent=this._errorMessage,this._errorElement.classList.add(this._settings.errorClass)}toggleButtonState(){this._hasValidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.disabled=!1)}_hasValidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputvalidity(e),this.toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._removeInputError(e)})),this.toggleButtonState()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._closeButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.preventDefault,e.target===this._popupElement&&this.close()}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputValues=[...this._popupForm.querySelectorAll(".modal__input")],this._popup=document.querySelector(e)}_getInputValue(){return this._inputData={},this._inputValues.forEach((e=>{this._inputData[e.name]=e.value})),this._inputData}setInputValues(e){this._inputValues.forEach((t=>{t.value=e[t.name]}))}reset(){this._popupForm.reset()}setLoading(e){this._popup.querySelector(".modal__button").textContent=e?"Saving...":"Save"}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValue())}))}}const n=e+"4e8e0a1d604782a0dff8.svg",o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},a=document.querySelector("#profile-edit-button"),l=document.querySelector("#profile-add-button"),d=document.querySelector("#avatar-edit-button");function c(e){return new t(e,"#card-template",h,u,m,_).renderCard()}function h(e,t){k.open({name:e,link:t})}function u(e){S.deleteCard(e._id).then((()=>{e._cardElement.remove(),e._cardElement=null,C.close()})).catch((e=>{console.error("Failed to delete card:",e)}))}function _(e){C.open(e)}function m(e){return!1===e._isLiked?S.addLike(e._id).then((()=>{e._isLiked=!0,e.addLikeButton()})).catch((e=>{console.error("Error on liking card",e)})):!0===e._isLiked?S.removeLike(e._id).then((()=>{e._isLiked=!1,e.removeLikeButton()})).catch((e=>{console.error("Error on unliking",e)})):void 0}document.getElementById("logo").src=n;const p=new i(o,"#modal-add-form"),v=new i(o,"#modal-edit-form"),E=new i(o,"#modal-avatar-form"),L=new class{constructor(e,t){let{items:i,renderer:s}=e;this._items=i,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){this._container.prepend(e)}setItems(e){this._items=e}}({items:[],renderer:c},".cards__list"),f=new r("#profile-edit-modal",(function(e){f.setLoading(!0),S.editProfile({name:e.name,description:e.description}).then((e=>{y.setUserInfo({name:e.name,description:e.about}),f.close()})).catch((e=>{console.error(e)})),f.setLoading(!1)})),g=new r("#profile-add-modal",(function(e){g.setLoading(!0),S.addCard({name:e.name,link:e.image}).then((e=>{L.addItem(c(e)),g.close(),g.reset(),p.toggleButtonState()})).catch((e=>{console.error(e)})),g.setLoading(!1)})),k=new class extends s{constructor(e){super(e),this._imagePreview=this._popupElement.querySelector(".modal__image"),this._imageCaption=this._popupElement.querySelector(".modal__caption")}open(e){let{name:t,link:i}=e;this._imagePreview.src=i,this._imagePreview.alt=`Picture of ${t}`,this._imageCaption.textContent=t,super.open()}}("#modal-image-popup"),y=new class{constructor(e,t,i){this._profileName=document.querySelector(e),this._description=document.querySelector(t),this._avatar=document.querySelector(i)}getUserInfo(){return{name:this._profileName.innerText,description:this._description.innerText}}setUserInfo(e){this._profileName.textContent=e.name,this._description.textContent=e.description,this._avatar.src=e.avatar}setAvatar(e){this._avatar.src=e}}("#profile-title","#profile-description","#profile-image"),S=new class{constructor(e){this._authorization=e.headers.authorization}async getInitialCards(){const e=await fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:this._authorization}});return await(e.ok?e.json():Promise.reject(`Error: ${e.status}`))}async getUser(){const e=await fetch("https://around-api.en.tripleten-services.com/v1/users/me",{headers:{authorization:this._authorization}});return await(e.ok?e.json():Promise.reject(`Error: ${e.status}`))}async editProfile(e){const t=await fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.description})});return await(t.ok?t.json():Promise.reject(`Error: ${t.status}`))}async addCard(e){const t=await fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})});return await(t.ok?t.json():Promise.reject(`Error: ${t.status}`))}async deleteCard(e){const t=await fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}`,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":"application/json"}});return await(t.ok?t.json():Promise.reject(`Error: ${t.status}`))}async addLike(e){const t=await fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"PUT",headers:{authorization:this._authorization,"Content-Type":"application/json"}});return await(t.ok?t.json():Promise.reject(`Error: ${t.status}`))}removeLike(e){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":"application/json"}})}async updateAvatar(e){const t=await fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})});return await(t.ok?t.json():Promise.reject(`Error: ${t.status}`))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7c40b814-e707-41cf-959d-91dbc11467c7","Content-Type":"application/json"}}),C=new class extends s{constructor(e,t){super(e),this._popup=document.querySelector(e),this._confirmBtn=this._popup.querySelector(".modal__button"),this._handleFormSubmit=t}open(e){this.card=e,super.open()}setEventListeners(){super.setEventListeners(),this._confirmBtn.addEventListener("click",(e=>{this._handleFormSubmit(this.card)}))}}("#delete-card-modal",u),b=new r("#avatar-edit-modal",(function(e){b.setLoading(!0),S.updateAvatar(e.image).then((t=>{b.close(),b.reset(),y.setAvatar(e.image)})).catch((e=>{console.error("Error saving avatar:",e)})).finally(b.setLoading(!1))}));a.addEventListener("click",(()=>{const{name:e,description:t}=y.getUserInfo();f.setInputValues({name:e,description:t}),v.resetValidation(),f.open()})),l.addEventListener("click",(()=>{g.open()})),d.addEventListener("click",(()=>{b.open()})),p.enableValidation(),v.enableValidation(),g.setEventListeners(),f.setEventListeners(),k.setEventListeners(),C.setEventListeners(),b.setEventListeners(),E.enableValidation(),S.getUser().then((e=>{y.setUserInfo({name:e.name,description:e.about,avatar:e.avatar})})).catch((e=>{console.error(e)})),S.getInitialCards().then((e=>{L.setItems(e),L.renderItems()})).catch((e=>{console.error(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,