(()=>{"use strict";class e{constructor(e,t,s,r,i,n){this._name=e.name,this._link=e.link,this._card=t,this._handleImageClick=s,this._handleCardDelete=r,this._handleLikeCard=i,this._data=e,this.id=e._id,this.isLiked=e.isLiked,this._handleDeleteModal=n}_setEventListeners(){this._likeButton=this.cardElement.querySelector(".card__like-button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeCard(this)})),this.cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteModal(this)})),this._imageElement.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}handleDeleteCard=()=>{this._handleCardDelete(this,this.cardElement)};addLikeButton(){this._likeButton.classList.add("card__like-button_active")}removeLikeButton(){this._likeButton.classList.remove("card__like-button_active")}setLikeButtonState(){this.isLiked&&this.addLikeButton()}renderCard(){return this.cardElement=document.querySelector(this._card).content.querySelector(".card").cloneNode(!0),this.cardElement.querySelector(".card__title").textContent=this._name,this._imageElement=this.cardElement.querySelector(".card__image"),this._imageElement.setAttribute("src",this._link),this._imageElement.setAttribute("alt","Picture of "+this._name),this._setEventListeners(),this.setLikeButtonState(),this.cardElement}}class t{constructor(e,t){this._settings=e,this._form=document.querySelector(t),this._inputList=[...this._form.querySelectorAll(e.inputSelector)],this._buttonElement=this._form.querySelector(e.submitButtonSelector)}_checkInputvalidity(e){e.validity.valid?this._removeInputError(e):this._addInputError(e)}_removeInputError(e){this._errorElement=this._form.querySelector(`.${e.id}-error`),e.classList.remove(this._settings.inputErrorClass),this._errorElement.classList.remove(this._settings.errorClass),this._errorElement.textContent=""}_addInputError(e){this._errorElement=this._form.querySelector(`.${e.id}-error`),this._errorMessage=e.validationMessage,e.classList.add(this._settings.inputErrorClass),this._errorElement.textContent=this._errorMessage,this._errorElement.classList.add(this._settings.errorClass)}toggleButtonState(){this._hasValidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.disabled=!1)}_hasValidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputvalidity(e),this.toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._removeInputError(e)})),this.toggleButtonState()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._closeButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.preventDefault,e.target===this._popupElement&&this.close()}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputValues=[...this._popupForm.querySelectorAll(".modal__input")],this._popupBtn=this._popupElement.querySelector(".modal__button"),this._popupBtnText=this._popupBtn.textContent}_getInputValue(){return this._inputData={},this._inputValues.forEach((e=>{this._inputData[e.name]=e.value})),this._inputData}setInputValues(e){this._inputValues.forEach((t=>{t.value=e[t.name]}))}reset(){this._popupForm.reset()}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupBtn.textContent=e?t:this._popupBtnText}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValue())}))}}const i=document.querySelector("#profile-edit-button"),n=document.querySelector("#profile-add-button"),o=document.querySelector("#avatar-edit-button"),a={};var d;function l(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.renderLoading(!0,s),e().then((()=>{t.close()})).catch(console.error).finally((()=>{t.renderLoading(!1,s)}))}function h(t){return new e(t,"#card-template",c,u,m,_).renderCard()}function c(e,t){L.open({name:e,link:t})}function u(e){f.deleteCard(e.id).then((()=>{e.cardElement.remove(),e.cardElement=null,k.close()})).catch(console.error)}function _(e){k.open(e)}function m(e){return!1===e.isLiked?f.addLike(e.id).then((()=>{e.isLiked=!0,e.addLikeButton()})).catch(console.error):!0===e.isLiked?f.removeLike(e.id).then((()=>{e.isLiked=!1,e.removeLikeButton()})).catch(console.error):void 0}d={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},[...document.querySelectorAll(d.formSelector)].forEach((e=>{const s=new t(d,`#${e.id}`),r=e.getAttribute("name");a[r]=s,s.enableValidation()})),document.getElementById("logo").src="4e8e0a1d604782a0dff8.svg";const p=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.reverse().forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){this._container.prepend(e)}setItems(e){this._items=e}}({items:[],renderer:h},".cards__list"),E=new r("#profile-edit-modal",(function(e){l((function(){return f.editProfile({name:e.name,description:e.description}).then((e=>{g.setUserInfo({name:e.name,description:e.about,avatar:e.avatar})}))}),E)})),v=new r("#profile-add-modal",(function(e){l((function(){return f.addCard({name:e.name,link:e.image}).then((e=>{p.addItem(h(e)),v.reset(),a.addCardPopupForm.toggleButtonState()}))}),v)})),L=new class extends s{constructor(e){super(e),this._imagePreview=this._popupElement.querySelector(".modal__image"),this._imageCaption=this._popupElement.querySelector(".modal__caption")}open(e){let{name:t,link:s}=e;this._imagePreview.src=s,this._imagePreview.alt=`Picture of ${t}`,this._imageCaption.textContent=t,super.open()}}("#modal-image-popup"),g=new class{constructor(e,t,s){this._profileName=document.querySelector(e),this._description=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._profileName.innerText,description:this._description.innerText}}setUserInfo(e){this._profileName.textContent=e.name,this._description.textContent=e.description,this.setAvatar(e.avatar)}setAvatar(e){this._avatar.src=e}}("#profile-title","#profile-description","#profile-image"),f=new class{constructor(e){this._authorization=e.headers.authorization,this._baseUrl=e.baseUrl,this._headers=e.headers}_request(e,t){return fetch(e,t).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}getUser(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}editProfile(e){return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.description})})}addCard(e){return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}addLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}removeLike(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}async updateAvatar(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7c40b814-e707-41cf-959d-91dbc11467c7","Content-Type":"application/json"}}),k=new class extends s{constructor(e,t){super(e),this._confirmBtn=this._popupElement.querySelector(".modal__button"),this._handleFormSubmit=t}open(e){this.card=e,super.open()}setEventListeners(){super.setEventListeners(),this._confirmBtn.addEventListener("click",(e=>{this._handleFormSubmit(this.card)}))}}("#delete-card-modal",u),b=new r("#avatar-edit-modal",(function(e){l((function(){return f.updateAvatar(e.image).then((()=>{g.setAvatar(e.image),b.reset(),a.avatarPopupForm.toggleButtonState()}))}),b)}));i.addEventListener("click",(()=>{const{name:e,description:t}=g.getUserInfo();E.setInputValues({name:e,description:t}),a.profilePopupForm.resetValidation(),E.open()})),n.addEventListener("click",(()=>{v.open()})),o.addEventListener("click",(()=>{b.open()})),v.setEventListeners(),E.setEventListeners(),L.setEventListeners(),k.setEventListeners(),b.setEventListeners(),f.getUser().then((e=>{g.setUserInfo({name:e.name,description:e.about,avatar:e.avatar})})).catch(console.error),f.getInitialCards().then((e=>{p.setItems(e),p.renderItems()})).catch(console.error)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QmxGLEtBQUtpSCxLQUFLLEdBRXJDLEdMZ0pBLHFCQUNBcEgsR0FHSWdNLEVBQWtCLElBQUkvRyxFQUMxQixzQkE3R0YsU0FBZ0NwRixHQVE5QjRHLEdBUEEsV0FDRSxPQUFPWSxFQUFJd0UsYUFBYWhNLEVBQUs0SixPQUFPN0MsTUFBSyxLQUN2Q3VDLEVBQVNrQixVQUFVeEssRUFBSzRKLE9BQ3hCdUMsRUFBZ0JuRyxRQUNoQlUsRUFBQUEsZ0JBQUFBLG1CQUFxRCxHQUV6RCxHQUMwQnlGLEVBQzVCLElBeUdBNUYsRUFBa0IvRSxpQkFBaUIsU0FBUyxLQUMxQyxNQUFNLEtBQUVoQixFQUFJLFlBQUU0SSxHQUFnQkUsRUFBU2dCLGNBQ3ZDcEIsRUFBaUJuRCxlQUFlLENBQUV2RixLQUFNQSxFQUFNNEksZ0JBQzlDMUMsRUFBQUEsaUJBQUFBLGtCQUNBd0MsRUFBaUJ0RSxNQUFNLElBR3pCNEIsRUFBY2hGLGlCQUFpQixTQUFTLEtBQ3RDa0ksRUFBaUI5RSxNQUFNLElBR3pCNkIsRUFBaUJqRixpQkFBaUIsU0FBUyxLQUN6QzJLLEVBQWdCdkgsTUFBTSxJQUl4QjhFLEVBQWlCMUUsb0JBQ2pCa0UsRUFBaUJsRSxvQkFDakJzQyxFQUFldEMsb0JBQ2YwQyxFQUFZMUMsb0JBQ1ptSCxFQUFnQm5ILG9CQUdoQndDLEVBQ0drRSxVQUNBM0UsTUFBTXNDLElBQ0xDLEVBQVNDLFlBQVksQ0FDbkIvSSxLQUFNNkksRUFBSTdJLEtBQ1Y0SSxZQUFhQyxFQUFJRyxNQUNqQkMsT0FBUUosRUFBSUksUUFDWixJQUVIekMsTUFBTUMsUUFBUUMsT0FFakJNLEVBQ0dpRSxrQkFDQTFFLE1BQU1zQyxJQUNMbEIsRUFBYWMsU0FBU0ksR0FDdEJsQixFQUFhUSxhQUFhLElBRTNCM0IsTUFBTUMsUUFBUUMsTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vYXJvdW5kdGhldXMvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL2Fyb3VuZHRoZXVzLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBkYXRhLFxuICAgIGNhcmRTZWxlY3RvcixcbiAgICBoYW5kbGVJbWFnZUNsaWNrLFxuICAgIGhhbmRsZUNhcmREZWxldGUsXG4gICAgaGFuZGxlTGlrZUNhcmQsXG4gICAgaGFuZGxlRGVsZXRlTW9kYWxcbiAgKSB7XG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2NhcmQgPSBjYXJkU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayA9IGhhbmRsZUltYWdlQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlQ2FyZERlbGV0ZSA9IGhhbmRsZUNhcmREZWxldGU7XG4gICAgdGhpcy5faGFuZGxlTGlrZUNhcmQgPSBoYW5kbGVMaWtlQ2FyZDtcbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcbiAgICB0aGlzLmlkID0gZGF0YS5faWQ7XG4gICAgdGhpcy5pc0xpa2VkID0gZGF0YS5pc0xpa2VkO1xuICAgIHRoaXMuX2hhbmRsZURlbGV0ZU1vZGFsID0gaGFuZGxlRGVsZXRlTW9kYWw7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKTtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQ2FyZCh0aGlzKTtcbiAgICB9KTtcbiAgICB0aGlzLmNhcmRFbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtYnV0dG9uXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlTW9kYWwodGhpcyk7XG4gICAgICB9KTtcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XG4gICAgfSk7XG4gIH1cblxuICBoYW5kbGVEZWxldGVDYXJkID0gKCkgPT4ge1xuICAgIHRoaXMuX2hhbmRsZUNhcmREZWxldGUodGhpcywgdGhpcy5jYXJkRWxlbWVudCk7XG4gIH07XG5cbiAgYWRkTGlrZUJ1dHRvbigpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gIH1cblxuICByZW1vdmVMaWtlQnV0dG9uKCkge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbiAgfVxuXG4gIHNldExpa2VCdXR0b25TdGF0ZSgpIHtcbiAgICBpZiAodGhpcy5pc0xpa2VkKSB7XG4gICAgICB0aGlzLmFkZExpa2VCdXR0b24oKTtcbiAgICB9XG4gIH1cblxuICByZW5kZXJDYXJkKCkge1xuICAgIHRoaXMuY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZClcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcbiAgICB0aGlzLmNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2ltYWdlRWxlbWVudCA9IHRoaXMuY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwic3JjXCIsIHRoaXMuX2xpbmspO1xuICAgIHRoaXMuX2ltYWdlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJhbHRcIiwgXCJQaWN0dXJlIG9mIFwiICsgdGhpcy5fbmFtZSk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLnNldExpa2VCdXR0b25TdGF0ZSgpO1xuICAgIHJldHVybiB0aGlzLmNhcmRFbGVtZW50O1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1TZWxlY3Rvcikge1xuICAgIHRoaXMuX3NldHRpbmdzID0gc2V0dGluZ3M7XG4gICAgdGhpcy5fZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZm9ybVNlbGVjdG9yKTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBbLi4udGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHNldHRpbmdzLmlucHV0U2VsZWN0b3IpXTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKFxuICAgICAgc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3JcbiAgICApO1xuICB9XG5cbiAgX2NoZWNrSW5wdXR2YWxpZGl0eShpbnB1dCkge1xuICAgIGlmIChpbnB1dC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5fcmVtb3ZlSW5wdXRFcnJvcihpbnB1dCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2FkZElucHV0RXJyb3IoaW5wdXQpO1xuICAgIH1cbiAgfVxuXG4gIF9yZW1vdmVJbnB1dEVycm9yKGlucHV0KSB7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmlucHV0RXJyb3JDbGFzcyk7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fc2V0dGluZ3MuZXJyb3JDbGFzcyk7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfVxuXG4gIF9hZGRJbnB1dEVycm9yKGlucHV0KSB7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2UgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmlucHV0RXJyb3JDbGFzcyk7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gdGhpcy5fZXJyb3JNZXNzYWdlO1xuICAgIHRoaXMuX2Vycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmVycm9yQ2xhc3MpO1xuICB9XG5cbiAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc1ZhbGlkSW5wdXQoKSkge1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBfaGFzVmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGV2dCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0dmFsaWRpdHkoaW5wdXQpO1xuICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIHRoaXMuX3JlbW92ZUlucHV0RXJyb3IoaW5wdXQpO1xuICAgIH0pO1xuICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fY2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLm1vZGFsX19jbG9zZS1idXR0b25cIlxuICAgICk7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlblwiKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsX29wZW5cIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdDtcbiAgICAgIGlmIChlLnRhcmdldCA9PT0gdGhpcy5fcG9wdXBFbGVtZW50KSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgICB0aGlzLl9pbnB1dFZhbHVlcyA9IFsuLi50aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIildO1xuICAgIHRoaXMuX3BvcHVwQnRuID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblwiKTtcbiAgICB0aGlzLl9wb3B1cEJ0blRleHQgPSB0aGlzLl9wb3B1cEJ0bi50ZXh0Q29udGVudDtcbiAgfVxuXG4gIF9nZXRJbnB1dFZhbHVlKCkge1xuICAgIHRoaXMuX2lucHV0RGF0YSA9IHt9O1xuICAgIHRoaXMuX2lucHV0VmFsdWVzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICB0aGlzLl9pbnB1dERhdGFbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5faW5wdXREYXRhO1xuICB9XG5cbiAgc2V0SW5wdXRWYWx1ZXMoZGF0YSkge1xuICAgIHRoaXMuX2lucHV0VmFsdWVzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC52YWx1ZSA9IGRhdGFbaW5wdXQubmFtZV07XG4gICAgfSk7XG4gIH1cblxuICByZXNldCgpIHtcbiAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcbiAgfVxuXG4gIHJlbmRlckxvYWRpbmcoaXNMb2FkaW5nLCBsb2FkaW5nVGV4dCA9IFwiU2F2aW5nLi4uXCIpIHtcbiAgICBpZiAoaXNMb2FkaW5nKSB7XG4gICAgICB0aGlzLl9wb3B1cEJ0bi50ZXh0Q29udGVudCA9IGxvYWRpbmdUZXh0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9wb3B1cEJ0bi50ZXh0Q29udGVudCA9IHRoaXMuX3BvcHVwQnRuVGV4dDtcbiAgICB9XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX3BvcHVwRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlKCkpO1xuICAgIH0pO1xuICB9XG59XG4iLCIvL0Zvcm1WYWxpZGF0b3Igc2V0dGluZ3NcbmV4cG9ydCBjb25zdCBzZXR0aW5ncyA9IHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fYnV0dG9uX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvcl92aXNpYmxlXCIsXG59O1xuXG4vL1Byb2ZpbGUgRWRpdCBNb2RhbFxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtYnV0dG9uXCIpO1xuLy9BZGQgTW9kYWxcbmV4cG9ydCBjb25zdCBjYXJkQWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWFkZC1idXR0b25cIik7XG4vL0F2YXRhciBNb2RhbFxuZXhwb3J0IGNvbnN0IGF2YXRhckVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1lZGl0LWJ1dHRvblwiKTtcbi8vVmFsaWRhdGlvblxuZXhwb3J0IGNvbnN0IGZvcm1WYWxpZGF0b3JzID0ge307XG4iLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybS5qc1wiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XG5pbXBvcnQgbG9nb0ltYWdlIGZyb20gXCIuLi9pbWFnZXMvbG9nby5zdmdcIjtcbmltcG9ydCB7XG4gIHNldHRpbmdzLFxuICBwcm9maWxlRWRpdEJ1dHRvbixcbiAgY2FyZEFkZEJ1dHRvbixcbiAgYXZhdGFyRWRpdEJ1dHRvbixcbiAgZm9ybVZhbGlkYXRvcnMsXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcblxuLy9WYWxpZGF0aW9uXG5jb25zdCBlbmFibGVWYWxpZGF0aW9uID0gKGNvbmZpZykgPT4ge1xuICBjb25zdCBmb3JtTGlzdCA9IFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5mb3JtU2VsZWN0b3IpXTtcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICBjb25zdCB2YWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGAjJHtmb3JtRWxlbWVudC5pZH1gKTtcbiAgICBjb25zdCBmb3JtTmFtZSA9IGZvcm1FbGVtZW50LmdldEF0dHJpYnV0ZShcIm5hbWVcIik7XG4gICAgZm9ybVZhbGlkYXRvcnNbZm9ybU5hbWVdID0gdmFsaWRhdG9yO1xuICAgIHZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4gIH0pO1xufTtcblxuZW5hYmxlVmFsaWRhdGlvbihzZXR0aW5ncyk7XG5cbi8vRnVuY3Rpb25zXG5mdW5jdGlvbiBoYW5kbGVTdWJtaXQocmVxdWVzdCwgcG9wdXBJbnN0YW5jZSwgbG9hZGluZ1RleHQgPSBcIlNhdmluZy4uLlwiKSB7XG4gIHBvcHVwSW5zdGFuY2UucmVuZGVyTG9hZGluZyh0cnVlLCBsb2FkaW5nVGV4dCk7XG4gIHJlcXVlc3QoKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIHBvcHVwSW5zdGFuY2UuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIHBvcHVwSW5zdGFuY2UucmVuZGVyTG9hZGluZyhmYWxzZSwgbG9hZGluZ1RleHQpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVFZGl0UHJvZmlsZUZvcm1TdWJtaXQoZGF0YSkge1xuICBmdW5jdGlvbiBtYWtlUmVxdWVzdCgpIHtcbiAgICByZXR1cm4gYXBpXG4gICAgICAuZWRpdFByb2ZpbGUoeyBuYW1lOiBkYXRhLm5hbWUsIGRlc2NyaXB0aW9uOiBkYXRhLmRlc2NyaXB0aW9uIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcbiAgICAgICAgICBuYW1lOiByZXMubmFtZSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogcmVzLmFib3V0LFxuICAgICAgICAgIGF2YXRhcjogcmVzLmF2YXRhcixcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgfVxuICBoYW5kbGVTdWJtaXQobWFrZVJlcXVlc3QsIHByb2ZpbGVQb3B1cEZvcm0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVBdmF0YXJGb3JtU3VibWl0KGRhdGEpIHtcbiAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XG4gICAgcmV0dXJuIGFwaS51cGRhdGVBdmF0YXIoZGF0YS5pbWFnZSkudGhlbigoKSA9PiB7XG4gICAgICB1c2VySW5mby5zZXRBdmF0YXIoZGF0YS5pbWFnZSk7XG4gICAgICBhdmF0YXJQb3B1cEZvcm0ucmVzZXQoKTtcbiAgICAgIGZvcm1WYWxpZGF0b3JzW1wiYXZhdGFyUG9wdXBGb3JtXCJdLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgfSk7XG4gIH1cbiAgaGFuZGxlU3VibWl0KG1ha2VSZXF1ZXN0LCBhdmF0YXJQb3B1cEZvcm0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVBZGRQcm9maWxlRm9ybVN1Ym1pdChkYXRhKSB7XG4gIGZ1bmN0aW9uIG1ha2VSZXF1ZXN0KCkge1xuICAgIHJldHVybiBhcGkuYWRkQ2FyZCh7IG5hbWU6IGRhdGEubmFtZSwgbGluazogZGF0YS5pbWFnZSB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGxheWVyU2VjdGlvbi5hZGRJdGVtKGNyZWF0ZUNhcmQocmVzKSk7XG4gICAgICBhZGRDYXJkUG9wdXBGb3JtLnJlc2V0KCk7XG4gICAgICBmb3JtVmFsaWRhdG9yc1tcImFkZENhcmRQb3B1cEZvcm1cIl0udG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICB9KTtcbiAgfVxuICBoYW5kbGVTdWJtaXQobWFrZVJlcXVlc3QsIGFkZENhcmRQb3B1cEZvcm0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGRhdGEpIHtcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKFxuICAgIGRhdGEsXG4gICAgXCIjY2FyZC10ZW1wbGF0ZVwiLFxuICAgIGhhbmRsZUNhcmRJbWFnZUNsaWNrLFxuICAgIGhhbmRsZUNhcmREZWxldGUsXG4gICAgaGFuZGxlTGlrZUNhcmQsXG4gICAgaGFuZGxlRGVsZXRlTW9kYWxcbiAgKTtcbiAgcmV0dXJuIGNhcmQucmVuZGVyQ2FyZCgpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVDYXJkSW1hZ2VDbGljayhuYW1lLCBsaW5rKSB7XG4gIGNhcmRJbWFnZVBvcHVwLm9wZW4oeyBuYW1lLCBsaW5rIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVDYXJkRGVsZXRlKGNhcmQpIHtcbiAgYXBpXG4gICAgLmRlbGV0ZUNhcmQoY2FyZC5pZClcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICBjYXJkLmNhcmRFbGVtZW50LnJlbW92ZSgpO1xuICAgICAgY2FyZC5jYXJkRWxlbWVudCA9IG51bGw7XG4gICAgICBkZWxldGVQb3B1cC5jbG9zZSgpO1xuICAgIH0pXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVEZWxldGVNb2RhbChjYXJkKSB7XG4gIGRlbGV0ZVBvcHVwLm9wZW4oY2FyZCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUxpa2VDYXJkKGNhcmQpIHtcbiAgaWYgKGNhcmQuaXNMaWtlZCA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gYXBpXG4gICAgICAuYWRkTGlrZShjYXJkLmlkKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBjYXJkLmlzTGlrZWQgPSB0cnVlO1xuICAgICAgICBjYXJkLmFkZExpa2VCdXR0b24oKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goY29uc29sZS5lcnJvcik7XG4gIH0gZWxzZSBpZiAoY2FyZC5pc0xpa2VkID09PSB0cnVlKSB7XG4gICAgcmV0dXJuIGFwaVxuICAgICAgLnJlbW92ZUxpa2UoY2FyZC5pZClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgY2FyZC5pc0xpa2VkID0gZmFsc2U7XG4gICAgICAgIGNhcmQucmVtb3ZlTGlrZUJ1dHRvbigpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcbiAgfVxufVxuXG4vL0ltYWdlIHNyY3NcbmNvbnN0IGxvZ28gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvZ29cIik7XG5sb2dvLnNyYyA9IGxvZ29JbWFnZTtcblxuLy9DbGFzcyBJbnN0YW5jZXNcbmNvbnN0IGxheWVyU2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxuICB7IGl0ZW1zOiBbXSwgcmVuZGVyZXI6IGNyZWF0ZUNhcmQgfSxcbiAgXCIuY2FyZHNfX2xpc3RcIlxuKTtcbmNvbnN0IHByb2ZpbGVQb3B1cEZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybShcbiAgXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIsXG4gIGhhbmRsZUVkaXRQcm9maWxlRm9ybVN1Ym1pdFxuKTtcbmNvbnN0IGFkZENhcmRQb3B1cEZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybShcbiAgXCIjcHJvZmlsZS1hZGQtbW9kYWxcIixcbiAgaGFuZGxlQWRkUHJvZmlsZUZvcm1TdWJtaXRcbik7XG5jb25zdCBjYXJkSW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNtb2RhbC1pbWFnZS1wb3B1cFwiKTtcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKFxuICBcIiNwcm9maWxlLXRpdGxlXCIsXG4gIFwiI3Byb2ZpbGUtZGVzY3JpcHRpb25cIixcbiAgXCIjcHJvZmlsZS1pbWFnZVwiXG4pO1xuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiN2M0MGI4MTQtZTcwNy00MWNmLTk1OWQtOTFkYmMxMTQ2N2M3XCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gIH0sXG59KTtcbmNvbnN0IGRlbGV0ZVBvcHVwID0gbmV3IFBvcHVwV2l0aENvbmZpcm0oXG4gIFwiI2RlbGV0ZS1jYXJkLW1vZGFsXCIsXG4gIGhhbmRsZUNhcmREZWxldGVcbik7XG5cbmNvbnN0IGF2YXRhclBvcHVwRm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICBcIiNhdmF0YXItZWRpdC1tb2RhbFwiLFxuICBoYW5kbGVBdmF0YXJGb3JtU3VibWl0XG4pO1xuXG4vL0V2ZW50bGlzdGVuZXJzXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBjb25zdCB7IG5hbWUsIGRlc2NyaXB0aW9uIH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBwcm9maWxlUG9wdXBGb3JtLnNldElucHV0VmFsdWVzKHsgbmFtZTogbmFtZSwgZGVzY3JpcHRpb24gfSk7XG4gIGZvcm1WYWxpZGF0b3JzW1wicHJvZmlsZVBvcHVwRm9ybVwiXS5yZXNldFZhbGlkYXRpb24oKTtcbiAgcHJvZmlsZVBvcHVwRm9ybS5vcGVuKCk7XG59KTtcblxuY2FyZEFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBhZGRDYXJkUG9wdXBGb3JtLm9wZW4oKTtcbn0pO1xuXG5hdmF0YXJFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGF2YXRhclBvcHVwRm9ybS5vcGVuKCk7XG59KTtcblxuLy9DbGFzcyBjYWxsc1xuYWRkQ2FyZFBvcHVwRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xucHJvZmlsZVBvcHVwRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xuY2FyZEltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmRlbGV0ZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5hdmF0YXJQb3B1cEZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy9BUEkgQ2FsbHNcbmFwaVxuICAuZ2V0VXNlcigpXG4gIC50aGVuKChyZXMpID0+IHtcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7XG4gICAgICBuYW1lOiByZXMubmFtZSxcbiAgICAgIGRlc2NyaXB0aW9uOiByZXMuYWJvdXQsXG4gICAgICBhdmF0YXI6IHJlcy5hdmF0YXIsXG4gICAgfSk7XG4gIH0pXG4gIC5jYXRjaChjb25zb2xlLmVycm9yKTtcblxuYXBpXG4gIC5nZXRJbml0aWFsQ2FyZHMoKVxuICAudGhlbigocmVzKSA9PiB7XG4gICAgbGF5ZXJTZWN0aW9uLnNldEl0ZW1zKHJlcyk7XG4gICAgbGF5ZXJTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XG4gIH0pXG4gIC5jYXRjaChjb25zb2xlLmVycm9yKTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKCkge1xuICAgIHRoaXMuX2l0ZW1zLnJldmVyc2UoKS5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgICB0aGlzLmFkZEl0ZW0oZWxlbWVudCk7XG4gICAgfSk7XG4gIH1cblxuICBhZGRJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxuXG4gIHNldEl0ZW1zKGl0ZW1zKSB7XG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faW1hZ2VQcmV2aWV3ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2ltYWdlQ2FwdGlvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jYXB0aW9uXCIpO1xuICB9XG5cbiAgb3Blbih7IG5hbWUsIGxpbmsgfSkge1xuICAgIHRoaXMuX2ltYWdlUHJldmlldy5zcmMgPSBsaW5rO1xuICAgIHRoaXMuX2ltYWdlUHJldmlldy5hbHQgPSBgUGljdHVyZSBvZiAke25hbWV9YDtcbiAgICB0aGlzLl9pbWFnZUNhcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcihwcm9maWxlTmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZU5hbWVTZWxlY3Rvcik7XG4gICAgdGhpcy5fZGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYlNlbGVjdG9yKTtcbiAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9wcm9maWxlTmFtZS5pbm5lclRleHQsXG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5fZGVzY3JpcHRpb24uaW5uZXJUZXh0LFxuICAgIH07XG4gIH1cblxuICBzZXRVc2VySW5mbyhkYXRhKSB7XG4gICAgdGhpcy5fcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBkYXRhLmRlc2NyaXB0aW9uO1xuICAgIHRoaXMuc2V0QXZhdGFyKGRhdGEuYXZhdGFyKTtcbiAgfVxuXG4gIHNldEF2YXRhcih1cmwpIHtcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gdXJsO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5fYXV0aG9yaXphdGlvbiA9IG9wdGlvbnMuaGVhZGVycy5hdXRob3JpemF0aW9uO1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBvcHRpb25zLmJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcbiAgfVxuXG4gIF9yZXF1ZXN0KHVybCwgb3B0aW9ucykge1xuICAgIHJldHVybiBmZXRjaCh1cmwsIG9wdGlvbnMpLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBfY2hlY2tSZXNwb25zZShyZXMpIHtcbiAgICByZXR1cm4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgfVxuXG4gIGdldFVzZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pO1xuICB9XG5cbiAgZWRpdFByb2ZpbGUoZGF0YSkge1xuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIGFib3V0OiBkYXRhLmRlc2NyaXB0aW9uLFxuICAgICAgfSksXG4gICAgfSk7XG4gIH1cblxuICBhZGRDYXJkKGRhdGEpIHtcbiAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIGxpbms6IGRhdGEubGluayxcbiAgICAgIH0pLFxuICAgIH0pO1xuICB9XG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgfVxuXG4gIGFkZExpa2UoY2FyZElkKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgfVxuXG4gIHJlbW92ZUxpa2UoY2FyZElkKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZUF2YXRhcihhdmF0YXJVcmwpIHtcbiAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogYXZhdGFyVXJsLFxuICAgICAgfSksXG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fY29uZmlybUJ0biA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b25cIik7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gIH1cblxuICBvcGVuKGNhcmQpIHtcbiAgICB0aGlzLmNhcmQgPSBjYXJkO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fY29uZmlybUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5jYXJkKTtcbiAgICB9KTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkNhcmQiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwiaGFuZGxlQ2FyZERlbGV0ZSIsImhhbmRsZUxpa2VDYXJkIiwiaGFuZGxlRGVsZXRlTW9kYWwiLCJ0aGlzIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2NhcmQiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9oYW5kbGVDYXJkRGVsZXRlIiwiX2hhbmRsZUxpa2VDYXJkIiwiX2RhdGEiLCJpZCIsIl9pZCIsImlzTGlrZWQiLCJfaGFuZGxlRGVsZXRlTW9kYWwiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfbGlrZUJ1dHRvbiIsImNhcmRFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaW1hZ2VFbGVtZW50IiwiaGFuZGxlRGVsZXRlQ2FyZCIsImFkZExpa2VCdXR0b24iLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmVMaWtlQnV0dG9uIiwicmVtb3ZlIiwic2V0TGlrZUJ1dHRvblN0YXRlIiwicmVuZGVyQ2FyZCIsImRvY3VtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsInRleHRDb250ZW50Iiwic2V0QXR0cmlidXRlIiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybVNlbGVjdG9yIiwiX3NldHRpbmdzIiwiX2Zvcm0iLCJfaW5wdXRMaXN0IiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJfYnV0dG9uRWxlbWVudCIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2NoZWNrSW5wdXR2YWxpZGl0eSIsImlucHV0IiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9yZW1vdmVJbnB1dEVycm9yIiwiX2FkZElucHV0RXJyb3IiLCJfZXJyb3JFbGVtZW50IiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9lcnJvck1lc3NhZ2UiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiX2hhc1ZhbGlkSW5wdXQiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiZGlzYWJsZWQiLCJzb21lIiwiaW5wdXRFbGVtZW50IiwiZm9yRWFjaCIsImV2dCIsImVuYWJsZVZhbGlkYXRpb24iLCJyZXNldFZhbGlkYXRpb24iLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsIl9jbG9zZUJ1dHRvbiIsIm9wZW4iLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJrZXkiLCJzZXRFdmVudExpc3RlbmVycyIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInRhcmdldCIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfcG9wdXBGb3JtIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfaW5wdXRWYWx1ZXMiLCJfcG9wdXBCdG4iLCJfcG9wdXBCdG5UZXh0IiwiX2dldElucHV0VmFsdWUiLCJfaW5wdXREYXRhIiwidmFsdWUiLCJzZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwicmVuZGVyTG9hZGluZyIsImlzTG9hZGluZyIsImxvYWRpbmdUZXh0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwicHJvZmlsZUVkaXRCdXR0b24iLCJjYXJkQWRkQnV0dG9uIiwiYXZhdGFyRWRpdEJ1dHRvbiIsImZvcm1WYWxpZGF0b3JzIiwiY29uZmlnIiwiaGFuZGxlU3VibWl0IiwicmVxdWVzdCIsInBvcHVwSW5zdGFuY2UiLCJ0aGVuIiwiY2F0Y2giLCJjb25zb2xlIiwiZXJyb3IiLCJmaW5hbGx5IiwiY3JlYXRlQ2FyZCIsImhhbmRsZUNhcmRJbWFnZUNsaWNrIiwiY2FyZEltYWdlUG9wdXAiLCJjYXJkIiwiYXBpIiwiZGVsZXRlQ2FyZCIsImRlbGV0ZVBvcHVwIiwiYWRkTGlrZSIsInJlbW92ZUxpa2UiLCJmb3JtRWxlbWVudCIsInZhbGlkYXRvciIsImZvcm1OYW1lIiwiZ2V0QXR0cmlidXRlIiwiZ2V0RWxlbWVudEJ5SWQiLCJzcmMiLCJsYXllclNlY3Rpb24iLCJfcmVmIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwicmV2ZXJzZSIsIml0ZW0iLCJlbGVtZW50IiwiYWRkSXRlbSIsInByZXBlbmQiLCJzZXRJdGVtcyIsInByb2ZpbGVQb3B1cEZvcm0iLCJlZGl0UHJvZmlsZSIsImRlc2NyaXB0aW9uIiwicmVzIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsImFib3V0IiwiYXZhdGFyIiwiYWRkQ2FyZFBvcHVwRm9ybSIsImFkZENhcmQiLCJpbWFnZSIsIl9pbWFnZVByZXZpZXciLCJfaW1hZ2VDYXB0aW9uIiwiYWx0IiwicHJvZmlsZU5hbWVTZWxlY3RvciIsImpvYlNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfcHJvZmlsZU5hbWUiLCJfZGVzY3JpcHRpb24iLCJfYXZhdGFyIiwiZ2V0VXNlckluZm8iLCJpbm5lclRleHQiLCJzZXRBdmF0YXIiLCJ1cmwiLCJvcHRpb25zIiwiX2F1dGhvcml6YXRpb24iLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsIl9iYXNlVXJsIiwiYmFzZVVybCIsIl9oZWFkZXJzIiwiX3JlcXVlc3QiLCJmZXRjaCIsIl9jaGVja1Jlc3BvbnNlIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImdldEluaXRpYWxDYXJkcyIsImdldFVzZXIiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNhcmRJZCIsInVwZGF0ZUF2YXRhciIsImF2YXRhclVybCIsIl9jb25maXJtQnRuIiwiYXZhdGFyUG9wdXBGb3JtIl0sInNvdXJjZVJvb3QiOiIifQ==